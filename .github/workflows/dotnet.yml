name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

  build_and_publish:
    needs: create_release
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - rid: win-x64
            output: volatility_win-x64_release
            zipName: Volatility_win-x64_Release.zip
          - rid: win-arm64
            output: volatility_win-arm64_release
            zipName: Volatility_win-arm64_Release.zip
          - rid: linux-x64
            output: volatility_linux-x64_release
            zipName: Volatility_linux-x64_Release.zip
          - rid: linux-arm64
            output: volatility_linux-arm64_release
            zipName: Volatility_linux-arm64_Release.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.x'

      - name: Restore dependencies
        run: dotnet restore Volatility/Volatility.csproj

      - name: Publish for ${{ matrix.rid }}
        shell: pwsh
        run: dotnet publish --configuration Release --runtime ${{ matrix.rid }} --self-contained true -p:ApplicationIcon=volatility_icon.ico --output ${{ matrix.output }} Volatility/Volatility.csproj

      - name: Zip artifact
        shell: pwsh
        run: Compress-Archive -Path ${{ matrix.output }}/* -DestinationPath ${{ matrix.zipName }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.zipName }}
          asset_name: ${{ matrix.zipName }}
          asset_content_type: application/zip

  build_macos_universal:
    needs: create_release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.x'

      - name: Restore dependencies
        run: dotnet restore Volatility/Volatility.csproj

      - name: Publish macOS x64
        run: dotnet publish --configuration Release --runtime osx-x64 --self-contained true -p:ApplicationIcon=volatility_icon.ico --output ./volatility_macos-x64_release Volatility/Volatility.csproj

      - name: Publish macOS arm64
        run: dotnet publish --configuration Release --runtime osx-arm64 --self-contained true -p:ApplicationIcon=volatility_icon.ico --output ./volatility_macos-arm64_release Volatility/Volatility.csproj

      - name: Zip macOS universal bundle
        run: zip -r Volatility_macos-universal_Release.zip volatility_macos-x64_release volatility_macos-arm64_release

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./Volatility_macos-universal_Release.zip
          asset_name: Volatility_macos-universal_Release.zip
          asset_content_type: application/zip

  notify_discord:
    needs:
      - create_release
      - build_and_publish
      - build_macos_universal
    runs-on: ubuntu-latest
    steps:
      - name: Send message to Discord
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\":\" Release v${{ github.run_number }} is now out. See https://github.com/${{ github.repository }}/releases/tag/v${{ github.run_number }}\"}" \
               "${{ secrets.WEBHOOK_LINK }}"
